@using EricJohansson.Site.Shared.Interfaces.Blog;
@using EricJohansson.Site.Shared.Types.Blog;
@using EricJohansson.Site.Shared.Support;

@inherits CancellableComponentBase;

@inject IThoughtsService _thoughtsService
@inject NavigationManager _navigationManager

@if (_thoughtsList == null)
{
    <text>...</text>
}
else
{
    foreach (var thought in _thoughtsList)
    {
        <section class="thought box" @attributes="SetAttributes(thought)">
            <h3>@thought.Title</h3>
            @thought.Summary
            @if (!String.IsNullOrWhiteSpace(thought.Url))
            {
                <div style="text-align: right;">
                    <a href="@thought.Url">Tell me more...</a>
                </div>
            }
        </section>
    }
    @if (showMoreThoughts)
    {
        <section class="thought box">
            <h3>More thoughts</h3>
            <div style="text-align: right;">
                <a href="/Thoughts">Show me more...</a>
            </div>
        </section>
    }
}

@code {
    private IEnumerable<ThoughtsListEntryDto>? _thoughtsList = null;
    private bool showMoreThoughts = false;

    protected Dictionary<string, object> SetAttributes(ThoughtsListEntryDto thought)
    {
        var attributes = new Dictionary<string, object>();

        if (!String.IsNullOrWhiteSpace(thought.ImageUrl))
        {
            string style = $@"background-image: url('{thought.ImageUrl}');
                background-repeat: no-repeat;
                background-size: 100% 4rem;
                background-style: cover;
                padding-top: 4rem;
                ";
            attributes.Add("style", style);
        }

        return attributes;
    }

    protected override async Task OnInitializedAsync()
    {
        _thoughtsList = _thoughtsService.GetLatestThoughts(3, CancellationToken).ToBlockingEnumerable(CancellationToken);
        showMoreThoughts = await _thoughtsService.GetThoughtCount(CancellationToken) > 3;
    }
}
