@using EricJohansson.Site.Shared.Blazor;
@using EricJohansson.Site.Shared.Interfaces.Blog;
@using EricJohansson.Site.Shared.Types.Blog;

@namespace EricJohansson.Site.Client.Components.Content

@inherits CancellableComponentBase
@inject IThoughtsService _thoughtsService
@inject NavigationManager _navigationManager

@if (_thoughtsList == null)
{
    <text>...</text>
}
else
{
    foreach (var thought in _thoughtsList)
    {
        <section class="thought" @attributes="SetAttributes(thought)">
            <h3>@thought.Title</h3>
            @thought.Summary
            @if (!String.IsNullOrWhiteSpace(thought.Url))
            {
                <div style="text-align: right;">
                    <NavLink href="@($"/thought/{thought.Posted.Year}/{thought.Slug}/")">Tell me more...</NavLink>
                </div>
            }
        </section>
    }
}

@code {
    IEnumerable<ThoughtsListEntryDto>? _thoughtsList = null;

    protected Dictionary<string, object> SetAttributes(ThoughtsListEntryDto thought)
    {
        var attributes = new Dictionary<string, object>();

        if (!String.IsNullOrWhiteSpace(thought.ImageUrl))
        {
            string style = $@"background-image: url('{thought.ImageUrl}');
                background-repeat: no-repeat;
                background-size: 100% 4rem;
                background-style: cover;
                padding-top: 4rem;
                ";
            attributes.Add("style", style);
        }

        return attributes;
    }

    protected void NavigateMusing(ThoughtsListEntryDto thought)
    {
        _navigationManager.NavigateTo($"/thought/{thought.Posted.Year}/{thought.Slug}/");
    }

    protected override async Task OnInitializedAsync()
    {
        //var thought = await _thoughtsService.GetFullThought("1", CancellationToken);
        _thoughtsList = _thoughtsService.GetLatestThoughts(5, CancellationToken).ToBlockingEnumerable(CancellationToken);
    }
}
