@using EricJohansson.Site.Shared.Blazor;
@using EricJohansson.Site.Shared.Interfaces.Schedule;
@using EricJohansson.Site.Shared.Types.Schedule;

@namespace EricJohansson.Site.Client.Components.Content

@inherits CancellableComponentBase
@inject IAppearanceService _appearanceService

<ul>
    @if (_appearances == null)
    {
        @for (int i = 0; i < 10; i++)
        {
            <li>
                <TelerikSkeleton ShapeType="@SkeletonShapeType.Rectangle" AnimationType="@SkeletonAnimationType.Wave" Height="50px" />
            </li>
        }
    }
    else
    {
        @foreach (var appearance in _appearances)
        {
            <Appearance Instance="@appearance" />
        }
    }
</ul>

@code {
    IEnumerable<AppearanceDto>? _appearances = null;

    protected override async Task OnInitializedAsync()
    {
        _appearances = _appearanceService.GetNextMonthsAppearances(CancellationToken).ToBlockingEnumerable(CancellationToken);

        await Task.CompletedTask;
    }
}
