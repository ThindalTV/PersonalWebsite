@using EricJohansson.Site.Shared.Blazor;
@using EricJohansson.Site.Shared.Interfaces.Blog;
@using EricJohansson.Site.Shared.Types.Blog;

@namespace EricJohansson.Site.Client.Components.Content

@inherits CancellableComponentBase
@inject IMusingService _musingService
@if(_musingsList == null)
{
    <text>...</text>
} else
{
    foreach( var musing in _musingsList)
    {
        <TelerikCard Class="musing">
            @if (musing.ImageUrl != null)
            {
                <CardHeader>
                    <CardImage Src="@musing.ImageUrl" />
                </CardHeader>
            }
            <CardBody>
                <CardTitle>@musing.Title</CardTitle>
                @musing.Summary
            </CardBody>
        </TelerikCard>
    }
}

@code {
    IEnumerable<MusingListEntryDto>? _musingsList = null;

    protected override async Task OnInitializedAsync()
    {

        var musing = await _musingService.GetFullMusing("1", CancellationToken);
        _musingsList = _musingService.GetLatestMusings(5, CancellationToken).ToBlockingEnumerable(CancellationToken);
    }
}
